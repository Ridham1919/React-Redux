{"ast":null,"code":"import { type } from \"@testing-library/user-event/dist/type\";\nimport axios from \"axios\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nfunction Fetchdata() {\n  return async dispatch => {\n    dispatch({\n      type: \"Fetch_Start\"\n    });\n    try {\n      const response = await axios.get('https://geton.skmbpk1z.a2hosted.com/get-data.php');\n      dispatch({\n        type: \"Fetch_Success\",\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"Fetch_Failed\",\n        payload: error\n      });\n    }\n  };\n}\n_c = Fetchdata;\nfunction Insertdata(a) {\n  return async dispatch => {\n    dispatch({\n      type: \"Fetch_Start\"\n    });\n    try {\n      const response = await axios.post('https://geton.skmbpk1z.a2hosted.com/insert-data.php', a);\n      dispatch({\n        type: \"Insert_Success\"\n      });\n    } catch (error) {\n      dispatch({\n        type: \"Fetch_Failed\",\n        payload: error\n      });\n    }\n  };\n}\n_c2 = Insertdata;\nconst Store2 = createStore(reducer, applyMiddleware(thunk));\nexport { Store2, Fetchdata, Insertdata };\nvar _c, _c2;\n$RefreshReg$(_c, \"Fetchdata\");\n$RefreshReg$(_c2, \"Insertdata\");","map":{"version":3,"names":["type","axios","applyMiddleware","createStore","thunk","Fetchdata","dispatch","response","get","payload","data","error","_c","Insertdata","a","post","_c2","Store2","reducer","$RefreshReg$"],"sources":["E:/React Redux/demo/src/Store2.jsx"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\r\nimport axios from \"axios\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { thunk } from \"redux-thunk\";\r\n\r\n\r\n\r\n\r\nfunction Fetchdata() {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: \"Fetch_Start\"\r\n        })\r\n        try {\r\n            const response = await axios.get('https://geton.skmbpk1z.a2hosted.com/get-data.php')\r\n            dispatch({\r\n                type: \"Fetch_Success\",\r\n                payload: response.data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"Fetch_Failed\",\r\n                payload: error\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction Insertdata(a) {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: \"Fetch_Start\"\r\n        })\r\n        try {\r\n            const response = await axios.post('https://geton.skmbpk1z.a2hosted.com/insert-data.php', a)\r\n            dispatch({\r\n                type: \"Insert_Success\",\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"Fetch_Failed\",\r\n                payload: error\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst Store2 = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport { Store2, Fetchdata, Insertdata }\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,uCAAuC;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,KAAK,QAAQ,aAAa;AAKnC,SAASC,SAASA,CAAA,EAAG;EACjB,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAAC;MACLN,IAAI,EAAE;IACV,CAAC,CAAC;IACF,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,kDAAkD,CAAC;MACpFF,QAAQ,CAAC;QACLN,IAAI,EAAE,eAAe;QACrBS,OAAO,EAAEF,QAAQ,CAACG;MACtB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,QAAQ,CAAC;QACLN,IAAI,EAAE,cAAc;QACpBS,OAAO,EAAEE;MACb,CAAC,CAAC;IAGN;EACJ,CAAC;AACL;AAACC,EAAA,GApBQP,SAAS;AAsBlB,SAASQ,UAAUA,CAACC,CAAC,EAAE;EACnB,OAAO,MAAOR,QAAQ,IAAK;IACvBA,QAAQ,CAAC;MACLN,IAAI,EAAE;IACV,CAAC,CAAC;IACF,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAI,CAAC,qDAAqD,EAAED,CAAC,CAAC;MAC3FR,QAAQ,CAAC;QACLN,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZL,QAAQ,CAAC;QACLN,IAAI,EAAE,cAAc;QACpBS,OAAO,EAAEE;MACb,CAAC,CAAC;IAGN;EACJ,CAAC;AACL;AAACK,GAAA,GAnBQH,UAAU;AAqBnB,MAAMI,MAAM,GAAGd,WAAW,CAACe,OAAO,EAAEhB,eAAe,CAACE,KAAK,CAAC,CAAC;AAE3D,SAASa,MAAM,EAAEZ,SAAS,EAAEQ,UAAU;AAAE,IAAAD,EAAA,EAAAI,GAAA;AAAAG,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}