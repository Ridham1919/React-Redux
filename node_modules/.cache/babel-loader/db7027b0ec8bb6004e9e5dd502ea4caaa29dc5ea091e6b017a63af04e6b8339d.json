{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport { thunk } from \"redux-thunk\";\nimport axios from \"axios\";\nconst abc = {\n  location: false,\n  data: null,\n  error: null,\n  loading: false\n};\nfunction reducer(state = abc, action) {\n  switch (action.type) {\n    case \"Fetch_start\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"Fetch_Success\":\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    case \"Fetch_Failed\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\nfunction getGujaratiErrorMessage(error) {\n  if (!error) return null;\n\n  // Custom Gujarati messages\n  if (error === \"Network Error\") {\n    return \"ઇન્ટરનેટ ઉપલબ્ધ નથી અથવા સર્વર પહોંચવું શક્ય નથી.\";\n  }\n  if (error.includes(\"404\")) {\n    return \"માગેલી માહિતી (404) મળી નથી.\";\n  }\n  if (error.includes(\"500\")) {\n    return \"સર્વર પર આંતરિક ભૂલ છે (500).\";\n  }\n  if (error.includes(\"timeout\")) {\n    return \"વિનંતી સમયસમાપ્ત થઈ ગઈ છે.\";\n  }\n\n  // Default error message if no known type\n  return \"કંઈક ખોટું થયું છે: \" + error;\n}\nfunction Fetchdata() {\n  return async dispatch => {\n    dispatch({\n      type: \"Fetch_start\"\n    });\n    try {\n      // Here the URL is incorrect to simulate an error\n      const response = await axios.get('https://geton.skmbpk1z.a2hosted.com/get-data.php');\n      dispatch({\n        type: \"Fetch_Success\",\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"Fetch_Failed\",\n        payload: getGujaratiErrorMessage(error.message)\n      });\n    }\n  };\n}\n_c = Fetchdata;\nconst Store2 = createStore(reducer, applyMiddleware(thunk));\nexport { Store2, Fetchdata };\nvar _c;\n$RefreshReg$(_c, \"Fetchdata\");","map":{"version":3,"names":["applyMiddleware","createStore","thunk","axios","abc","location","data","error","loading","reducer","state","action","type","payload","getGujaratiErrorMessage","includes","Fetchdata","dispatch","response","get","message","_c","Store2","$RefreshReg$"],"sources":["E:/React Redux/demo/src/Store2.jsx"],"sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\r\nimport { thunk } from \"redux-thunk\";\r\nimport axios from \"axios\";\r\n\r\nconst abc = {\r\n    location: false,\r\n    data: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nfunction reducer(state = abc, action) {\r\n    switch (action.type) {\r\n        case \"Fetch_start\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case \"Fetch_Success\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload\r\n            };\r\n        case \"Fetch_Failed\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction getGujaratiErrorMessage(error) {\r\n    if (!error) return null;\r\n\r\n    // Custom Gujarati messages\r\n    if (error === \"Network Error\") {\r\n        return \"ઇન્ટરનેટ ઉપલબ્ધ નથી અથવા સર્વર પહોંચવું શક્ય નથી.\";\r\n    }\r\n\r\n    if (error.includes(\"404\")) {\r\n        return \"માગેલી માહિતી (404) મળી નથી.\";\r\n    }\r\n\r\n    if (error.includes(\"500\")) {\r\n        return \"સર્વર પર આંતરિક ભૂલ છે (500).\";\r\n    }\r\n\r\n    if (error.includes(\"timeout\")) {\r\n        return \"વિનંતી સમયસમાપ્ત થઈ ગઈ છે.\";\r\n    }\r\n\r\n    // Default error message if no known type\r\n    return \"કંઈક ખોટું થયું છે: \" + error;\r\n}\r\n\r\nfunction Fetchdata() {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: \"Fetch_start\"\r\n        });\r\n        try {\r\n            // Here the URL is incorrect to simulate an error\r\n            const response = await axios.get('https://geton.skmbpk1z.a2hosted.com/get-data.php');\r\n            dispatch({\r\n                type: \"Fetch_Success\",\r\n                payload: response.data\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"Fetch_Failed\",\r\n                payload: getGujaratiErrorMessage(error.message)\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nconst Store2 = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport { Store2, Fetchdata };\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,KAAK,QAAQ,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG;EACRC,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACb,CAAC;AAED,SAASC,OAAOA,CAACC,KAAK,GAAGN,GAAG,EAAEO,MAAM,EAAE;EAClC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MACd,OAAO;QACH,GAAGF,KAAK;QACRF,OAAO,EAAE;MACb,CAAC;IACL,KAAK,eAAe;MAChB,OAAO;QACH,GAAGE,KAAK;QACRF,OAAO,EAAE,KAAK;QACdF,IAAI,EAAEK,MAAM,CAACE;MACjB,CAAC;IACL,KAAK,cAAc;MACf,OAAO;QACH,GAAGH,KAAK;QACRF,OAAO,EAAE,KAAK;QACdD,KAAK,EAAEI,MAAM,CAACE;MAClB,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ;AAEA,SAASI,uBAAuBA,CAACP,KAAK,EAAE;EACpC,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;;EAEvB;EACA,IAAIA,KAAK,KAAK,eAAe,EAAE;IAC3B,OAAO,mDAAmD;EAC9D;EAEA,IAAIA,KAAK,CAACQ,QAAQ,CAAC,KAAK,CAAC,EAAE;IACvB,OAAO,8BAA8B;EACzC;EAEA,IAAIR,KAAK,CAACQ,QAAQ,CAAC,KAAK,CAAC,EAAE;IACvB,OAAO,+BAA+B;EAC1C;EAEA,IAAIR,KAAK,CAACQ,QAAQ,CAAC,SAAS,CAAC,EAAE;IAC3B,OAAO,4BAA4B;EACvC;;EAEA;EACA,OAAO,sBAAsB,GAAGR,KAAK;AACzC;AAEA,SAASS,SAASA,CAAA,EAAG;EACjB,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAAC;MACLL,IAAI,EAAE;IACV,CAAC,CAAC;IACF,IAAI;MACA;MACA,MAAMM,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,kDAAkD,CAAC;MACpFF,QAAQ,CAAC;QACLL,IAAI,EAAE,eAAe;QACrBC,OAAO,EAAEK,QAAQ,CAACZ;MACtB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZU,QAAQ,CAAC;QACLL,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAEC,uBAAuB,CAACP,KAAK,CAACa,OAAO;MAClD,CAAC,CAAC;IACN;EACJ,CAAC;AACL;AAACC,EAAA,GAnBQL,SAAS;AAqBlB,MAAMM,MAAM,GAAGrB,WAAW,CAACQ,OAAO,EAAET,eAAe,CAACE,KAAK,CAAC,CAAC;AAE3D,SAASoB,MAAM,EAAEN,SAAS;AAAG,IAAAK,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}