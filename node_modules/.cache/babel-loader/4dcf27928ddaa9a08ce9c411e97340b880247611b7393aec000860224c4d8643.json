{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport axios from \"axios\"; // API call માટે\n\nconst initialState = {\n  loading: false,\n  data: null,\n  error: null\n};\n\n// Reducer function\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\n// Thunk action for async API call\nfunction Fetchdata() {\n  return async dispatch => {\n    dispatch({\n      type: \"FETCH_REQUEST\"\n    });\n    try {\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\"); // Example API\n      dispatch({\n        type: \"FETCH_SUCCESS\",\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"FETCH_FAILURE\",\n        payload: error.message\n      });\n    }\n  };\n}\n_c = Fetchdata;\nconst Store = createStore(reducer, applyMiddleware(thunk));\nexport { Store, Fetchdata };\nvar _c;\n$RefreshReg$(_c, \"Fetchdata\");","map":{"version":3,"names":["createStore","applyMiddleware","thunk","axios","initialState","loading","data","error","reducer","state","action","type","payload","Fetchdata","dispatch","response","get","message","_c","Store","$RefreshReg$"],"sources":["E:/React Redux/demo/src/Store2.jsx"],"sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport axios from \"axios\"; // API call માટે\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\n// Reducer function\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"FETCH_REQUEST\":\r\n      return { ...state, loading: true, error: null };\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, loading: false, data: action.payload };\r\n    case \"FETCH_FAILURE\":\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Thunk action for async API call\r\nfunction Fetchdata() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"FETCH_REQUEST\" });\r\n    try {\r\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\"); // Example API\r\n      dispatch({ type: \"FETCH_SUCCESS\", payload: response.data });\r\n    } catch (error) {\r\n      dispatch({ type: \"FETCH_FAILURE\", payload: error.message });\r\n    }\r\n  };\r\n}\r\n\r\nconst Store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport { Store, Fetchdata };\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,SAASC,OAAOA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,EAAE;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGF,KAAK;QAAEJ,OAAO,EAAE,IAAI;QAAEE,KAAK,EAAE;MAAK,CAAC;IACjD,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGE,KAAK;QAAEJ,OAAO,EAAE,KAAK;QAAEC,IAAI,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAC3D,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGH,KAAK;QAAEJ,OAAO,EAAE,KAAK;QAAEE,KAAK,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAC5D;MACE,OAAOH,KAAK;EAChB;AACF;;AAEA;AACA,SAASI,SAASA,CAAA,EAAG;EACnB,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAAC;MAAEH,IAAI,EAAE;IAAgB,CAAC,CAAC;IACnC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,4CAA4C,CAAC,CAAC,CAAC;MAChFF,QAAQ,CAAC;QAAEH,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAEG,QAAQ,CAACT;MAAK,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdO,QAAQ,CAAC;QAAEH,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAEL,KAAK,CAACU;MAAQ,CAAC,CAAC;IAC7D;EACF,CAAC;AACH;AAACC,EAAA,GAVQL,SAAS;AAYlB,MAAMM,KAAK,GAAGnB,WAAW,CAACQ,OAAO,EAAEP,eAAe,CAACC,KAAK,CAAC,CAAC;AAE1D,SAASiB,KAAK,EAAEN,SAAS;AAAG,IAAAK,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}